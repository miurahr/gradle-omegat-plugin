plugins {
    id "groovy"
    id "com.jfrog.bintray" version "1.8.5"
    id "maven"
    id "maven-publish"
    id "signing"
    id 'groovy-gradle-plugin'
    id "com.gradle.plugin-publish" version "0.12.0"
}

group = 'org.omegat.gradle'
version = currentVersion
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

file("$rootDir/src/main/resources/org/omegat/gradle/omegat.properties").withReader {
    Properties props = new Properties()
    props.load(it)
    project.ext.omegatDependency = props.getProperty("dependency")
    project.ext.omegatRepositoryUrl = props.getProperty("mavenRepositoryUrl")
}


gradlePlugin {
    plugins {
        omegatPlugin {
            id = 'gradle-omegat-plugin'
            implementationClass = 'org.omegat.gradle.OmegatPlugin'
        }
    }
}

pluginBundle {
    vcsUrl = 'https://github.com/omegat-org/gralde-omegat-plugin'
    website = 'https://github.com/omegat-org/gradle-omegat-plugin'
    description = 'A plugin to support OmegaT on your project'
    tags = ['OmegaT']
    plugins {
        omegatPlugin {
            displayName = 'OmegaT plugin'
        }
    }
}

repositories {
    maven {
        url omegatRepositoryUrl
    }
    jcenter()
}

dependencies {
    compileOnly gradleApi()
    compileOnly localGroovy()
    runtime omegatDependency
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

task createReleasePropertiesFile(type:Exec) {
    String fileName = 'omegat.plugin.release.properties'
    println "Creating $fileName"
    String fileContent = "version=$currentVersion"
    (new File("$rootDir/$fileName")).write(fileContent)
}

artifacts {
    archives jar
    archives sourceJar
}

// The Gradle plugin portal doesn't allow signature files.
// bintray is configured to do automate signing
if (!gradle.startParameter.taskNames.intersect(['publishPlugins', 'bintray'])) {
    signing {
        useGpgCmd()
        required { isReleaseVersion }
        sign configurations.archives
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            name = project.name
            packaging = 'jar'
            description = projectDesc
            url = projectUrl
            version = project.version
            licenses {
                license {
                    name = 'GNU General Public License, Version 3'
                    url = 'https://www.gnu.org/licenses/gpl.html'
                    distribution = 'repo'
                }
            }
            scm {
                url = githubUrl
                connection = "scm:git:${githubUrl}"
                developerConnection = "scm:git:${githubUrl}"
            }
            developers {
                developer {
                    id = 'miurahr'
                    name = 'Hiroshi Miura'
                    email = 'miurahr@linux.com'
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    dryRun = false
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'gradle-omegat-plugin'
        desc = projectDesc
        websiteUrl = projectUrl
        issueTrackerUrl = projectUrl + '/issues'
        vcsUrl = projectUrl
        githubRepo = githubUser + '/' + githubRepository
        licenses = ['GPL-3.0']
        labels = ['java', 'OmegaT', 'translation', 'Translation Memory', 'CAT', 'Gradle', 'Bundle', 'resources', 'localize']
        publicDownloadNumbers = true
        version {
            name = project.version
            vcsTag = "v${project.version}"
            attributes = ["gradle-plugin": "org.omegat.gradle"]
        }
    }
}

// see https://github.com/bintray/gradle-bintray-plugin/issues/300
Signature.metaClass.getToSignArtifact = { ->
    return (delegate as Signature).source
}
