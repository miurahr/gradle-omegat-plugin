import groovy.swing.SwingBuilder

plugins {
    // bintray
    id "com.jfrog.bintray" version "1.6"
}

group = 'org.omegat.gradle'
version = currentVersion

file("$rootDir/src/main/resources/org/omegat/gradle/omegat.properties").withReader {
    Properties props = new Properties()
    props.load(it)
    project.ext.omegatDependency = props.getProperty("dependency")
    project.ext.omegatRepositoryUrl = props.getProperty("mavenRepositoryUrl")
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
    maven {
        url omegatRepositoryUrl
    }
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    runtime omegatDependency
}

compileGroovy {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task createReleasePropertiesFile(type:Exec) {
    String fileName = 'omegat.plugin.release.properties'
    println "Creating $fileName"
    String fileContent = "version=$currentVersion"
    (new File("$rootDir/$fileName")).write(fileContent)
}

artifacts {
    archives jar
    archives sourceJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") ||
            gradle.taskGraph.hasTask("githubRelease") ||
            gradle.taskGraph.hasTask("bintrayUpload")}
    sign configurations.archives
}

install {
    repositories.mavenInstaller {
        pom.project {
            name = project.name
            packaging = 'jar'
            description = projectDesc
            url = projectUrl
            version = project.version
            licenses {
                license {
                    name = 'GNU General Public License, Version 3'
                    url = 'https://www.gnu.org/licenses/gpl.html'
                    distribution = 'repo'
                }
            }
            scm {
                url = githubUrl
                connection = "scm:git:${githubUrl}"
                developerConnection = "scm:git:${githubUrl}"
            }
            developers {
                developer {
                    id = 'miurahr'
                    name = 'Hiroshi Miura'
                    email = 'miurahr@linux.com'
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    dryRun = false
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'gradle-omegat-plugin'
        desc = projectDesc
        websiteUrl = projectUrl
        issueTrackerUrl = projectUrl + '/issues'
        vcsUrl = projectUrl
        githubRepo = githubUser + '/' + githubRepository
        licenses = ['GPL-3.0']
        labels = ['java', 'OmegaT', 'translation', 'Translation Memory', 'CAT', 'Gradle', 'Bundle', 'resources', 'localize']
        publicDownloadNumbers = true
    }
}

// maven publish to local repository.(for test)
uploadArchives {
    repositories.mavenDeployer {
        // for local maven
        repository url: "file://$System.env.HOME/.m2/repository"
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        pom.project {
            name = project.name
            packaging = 'jar'
            description = projectDesc
            url = projectUrl
            version = project.version
            licenses {
                license {
                    name = 'GNU General Public License, Version 3'
                    url  = 'https://www.gnu.org/licenses/gpl.html'
                    distribution = 'repo'
                }
            }
            scm {
                url = githubUrl
                connection = "scm:git:${githubUrl}"
                developerConnection = "scm:git:${githubUrl}"
            }
            developers {
                developer {
                    id = projectOwner
                    name = projectOwnerFullName
                    email = projectOwnerEmail
                }
            }
        }
    }
}

