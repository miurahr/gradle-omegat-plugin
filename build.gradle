plugins {
    id "groovy"
    id "signing"
    id 'groovy-gradle-plugin'
    id "com.gradle.plugin-publish" version "0.12.0"
}

group = 'org.omegat.gradle'
version = currentVersion
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

file("$rootDir/src/main/resources/org/omegat/gradle/omegat.properties").withReader {
    Properties props = new Properties()
    props.load(it)
    project.ext.omegatDependency = props.getProperty("dependency")
    project.ext.omegatRepositoryUrl = props.getProperty("mavenRepositoryUrl")
}

gradlePlugin {
    plugins {
        omegatPlugin {
            id = 'gradle-omegat-plugin'
            implementationClass = 'org.omegat.gradle.OmegatPlugin'
        }
    }
}

pluginBundle {
    vcsUrl = 'https://github.com/omegat-org/gralde-omegat-plugin'
    website = 'https://github.com/omegat-org/gradle-omegat-plugin'
    description = 'A plugin to support OmegaT on your project'
    tags = ['OmegaT']
    plugins {
        omegatPlugin {
            displayName = 'OmegaT plugin'
        }
    }
}

repositories {
    maven {
        url omegatRepositoryUrl
    }
    jcenter()
}

dependencies {
    compileOnly gradleApi()
    compileOnly localGroovy()
    runtime omegatDependency
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

task createReleasePropertiesFile(type:Exec) {
    String fileName = 'omegat.plugin.release.properties'
    println "Creating $fileName"
    String fileContent = "version=$currentVersion"
    (new File("$rootDir/$fileName")).write(fileContent)
}

artifacts {
    archives jar
    archives sourceJar
}

// The Gradle plugin portal doesn't allow signature files.
if (!gradle.startParameter.taskNames.intersect(['publishPlugins'])) {
    signing {
        useGpgCmd()
        required { isReleaseVersion }
        sign configurations.archives
    }
}
